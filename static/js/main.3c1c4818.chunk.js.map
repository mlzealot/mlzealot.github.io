{"version":3,"sources":["data/HomeData.js","data/NavBarData.js","assets/resume.pdf","components/NavBar.js","components/Home.js","data/ProjectData.js","components/ProjectCards.js","components/Footer.js","assets/avatar256x256.png","data/AboutMeData.js","components/AboutMe.js","App.js","registerServiceWorker.js","index.js"],"names":["appName","navBarPortfolioLinkArray","portfolio_id","portfolio_name","portfolio_url","portfolio_icon","NavBar","Component","state","isOpen","toggleCollapse","this","setState","render","className","dark","expand","fixed","scrolling","href","onClick","id","navbar","left","offset","resume","target","right","map","portfolio","fab","icon","Home","React","overlay","style","height","width","paddingTop","md","type","delay","xl","src","alt","base","dimensions","projectJsonArray","title","image","description","links","url","button_text","ProjectCards","project","top","hover","tag","link","outline","color","size","Footer","Date","getFullYear","aboutMeLinkArray","social_id","social_name","social_url","social_icon","color_class","is_fab","AboutMe","avatar","social","textAlign","AppDemo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3c1c4818.chunk.js","sourcesContent":["export const appName = \"ML Zealot\";\nexport const appTagline = \"Machine Learning and Data Science Simplified.\"\n","\nexport const navBarPortfolioLinkArray = [\n    {\n        portfolio_id : 0, \n        portfolio_name : \"GitHub\",\n        portfolio_url : \"https://github.com/srimanth98\",\n        portfolio_icon : \"github\",\n    },\n    {\n        portfolio_id : 1,\n        portfolio_name : \"Kaggle\",\n        portfolio_url : \"https://kaggle.com/srimanth98\",\n        portfolio_icon : \"kaggle\",\n    },{\n        portfolio_id : 2,\n        portfolio_name : \"Hackerrank\",\n        portfolio_url : \"https://www.hackerrank.com/srimanth98\",\n        portfolio_icon : \"hackerrank\",\n    },\n];","export default __webpack_public_path__ + \"static/media/resume.7b9a8614.pdf\";","import React, { Component } from \"react\";\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBIcon\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"../css/style_common.css\";\nimport \"../css/navbar.css\";\n\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nimport { appName } from '../data/HomeData';\nimport { navBarPortfolioLinkArray } from '../data/NavBarData';\n\nimport resume from \"../assets/resume.pdf\";\n\nclass NavBar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n      <Router>\n        <MDBNavbar className=\"primary-gradient\" dark expand=\"md\" fixed=\"top\" scrolling>\n          <MDBNavbarBrand>\n            <strong >\n              <AnchorLink href=\"#home\" className=\"white-text\">\n                  {appName}\n              </AnchorLink>\n            </strong>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <MDBNavbarNav left>\n              <MDBNavItem>\n                <AnchorLink href=\"#projects\" offset='100' className=\"nav-link\">\n                  Projects\n                </AnchorLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <AnchorLink href=\"#about_me\" offset='60' className=\"nav-link\">\n                  About Me\n                </AnchorLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <a href={resume} target=\"_blank\" className=\"nav-link\">\n                  Resume\n                </a>\n              </MDBNavItem>\n            </MDBNavbarNav>\n            <MDBNavbarNav right>\n              {navBarPortfolioLinkArray.map((portfolio) => (\n                <MDBNavItem className=\"nav-link\" key={portfolio.portfolio_id}>\n                  <a href={portfolio.portfolio_url} className=\"waves-effect waves-light\" target=\"_blank\">\n                    <MDBIcon fab icon={portfolio.portfolio_icon} className=\"white-text\"/>\n                  </a>\n                </MDBNavItem>\n              ))}\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBNavbar>\n      </Router>\n    );\n  }\n}\n\nexport default NavBar;","import React from 'react';\nimport {\n  MDBMask,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n  MDBView,\n  MDBContainer,\n  MDBAnimation\n} from 'mdbreact';\nimport { appName, appTagline } from '../data/HomeData';\nimport '../css/Home.css';\n\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nimport resume from \"../assets/resume.pdf\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div id='apppage'>\n        <MDBView>\n          <MDBMask className='white-text gradient' />\n          <MDBMask className='flex-center' overlay=\"black-light\" />\n          <MDBContainer\n            style={{ height: '100%', width: '100%', paddingTop: '10rem' }}\n            className='d-flex justify-content-center white-text align-items-center'\n          >\n            <MDBRow>\n              <MDBCol md='7' className='text-center text-md-left mt-xl-5 mb-5'>\n                <MDBAnimation type='fadeInLeft' delay='.3s'>\n                  <h1 className='h1-responsive font-weight-bold mt-sm-5'>\n                    {appName}\n                  </h1>\n                  <hr className='hr-light' />\n                  <h6 className='mb-4'>\n                    {appTagline}\n                  </h6>\n\n                  <AnchorLink className=\"btn btn-white\" href=\"#projects\">\n                    <MDBIcon icon=\"terminal\" />&nbsp;&nbsp;Explore\n                  </AnchorLink>\n                  <a className=\"btn btn-outline-white\" href={resume} target=\"_blank\">\n                    Resume&nbsp;&nbsp;<MDBIcon icon=\"file-pdf\" />\n                  </a>\n                </MDBAnimation>\n              </MDBCol>\n\n              <MDBCol md='5' xl='5' className='mt-xl-5'>\n                <MDBAnimation type='fadeInRight' delay='.3s'>\n                  <img\n                    src='https://mdbootstrap.com/img/Mockups/Transparent/Small/admin-new.png'\n                    alt=''\n                    className='img-fluid'\n                  />\n                </MDBAnimation>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBView>\n      </div>\n    );\n  }\n}\n\nexport default Home;","// json array data format\n\nconst base = \"https://source.unsplash.com\";\nconst dimensions = \"640x420\";\n\nexport const componentTitle = \"My Work\";\nexport const componentDescription = \"Here are some of my projects.\";\n\n\nexport const projectJsonArray = [\n    {\n        id: 0,\n        title: \"Housing Prices Advanced\",\n        image: base + \"/\" + \"g39p1kDjvSY\" + \"/\" + dimensions,\n        description: \"Housing prices advanced kernel from kaggle.\",\n        links: [\n            {\n                icon:\"kaggle\",\n                url:\"https://www.kaggle.com/srimanth98/data-cleaning-eda-plotly-feat-engg-lasso\",\n                button_text:\"Kaggle\"\n            },\n        ],\n    },\n    {\n        id: 1,\n        title: \"YouTube Sentiment Analysis\",\n        image:  base + \"/\" + \"niUkImZcSP8\" + \"/\" + dimensions,\n        description: \"A dashboard, created for naive users to analyze youtube comments.\",\n        links: [\n            {\n                icon:\"github\",\n                url:\"https://www.kaggle.com/srimanth98/data-cleaning-eda-plotly-feat-engg-lasso\",\n                button_text:\"GitHub\"\n            },\n        ],\n    },\n    {\n        id: 2,\n        title: \"Data Explorer\",\n        image: base + \"/\" + \"JKUTrJ4vK00\" + \"/\" + dimensions,\n        description: \"An application which allows the user to read and clean a relational \\\n        dataset, build a few plots off the dataset and allows the user to \\\n        select the features and the ML algorithm based on the plot info. \\\n        Developed using Dash by Plotly.\",\n        links: [\n            {\n                icon:\"github\",\n                url:\"https://www.kaggle.com/srimanth98/data-cleaning-eda-plotly-feat-engg-lasso\",\n                button_text:\"GitHub\"\n            },\n        ],\n    },\n]\n","import React, { Component } from \"react\";\r\nimport { MDBCard, MDBCardTitle, MDBBtn, MDBCardGroup, MDBCardImage, MDBCardText, MDBCardBody, MDBCol, MDBRow, MDBIcon } from \"mdbreact\";\r\nimport '../css/cards.css';\r\nimport { componentTitle, componentDescription, projectJsonArray } from \"../data/ProjectData\";\r\nimport '../css/style_common.css';\r\n\r\nclass ProjectCards extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-center my-5\">\r\n                    <h2 className=\"h1-responsive font-weight-bold my-4\">\r\n                        {componentTitle}\r\n                    </h2>\r\n                    <p className=\"w-responsive mx-auto mb-5 black-text\">\r\n                        {componentDescription}\r\n                    </p>\r\n                </div>\r\n                <MDBCardGroup>\r\n                    {/* Loop through projects */}\r\n                    {projectJsonArray.map((project) => (\r\n                        <MDBCol md=\"3\" className=\"card-padding\" key={project.id}>\r\n                            <MDBCard>\r\n                                <MDBCardImage src={project.image} alt=\"MDBCard image cap\" top hover\r\n                                    overlay=\"white-slight\" alt=\"Oops!\" />\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle tag=\"h5\">{project.title}</MDBCardTitle>\r\n                                    <MDBCardText>\r\n                                        {project.description}\r\n                                    </MDBCardText>\r\n                                    {/* Loop through links in each project */}\r\n                                    {project.links.map((link) => (\r\n                                        <MDBBtn outline color=\"black\" size=\"md\" \r\n                                            href={link.url} target=\"_blank\" \r\n                                            className=\"black-text\">\r\n                                                <MDBIcon fab icon={link.icon} />&nbsp;\r\n                                                {link.button_text}\r\n                                        </MDBBtn>\r\n                                    ))}\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    ))}\r\n                </MDBCardGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCards;","import React, { Component } from 'react';\nimport {MDBFooter} from 'mdbreact';\nimport '../css/style_common.css'\n\nclass Footer extends Component {\n    render() {\n        return(\n            <div>\n            <MDBFooter className=\"primary-gradient\">\n                <p className='footer-copyright mb-0 py-3 text-center'>\n                &copy; {new Date().getFullYear()} Copyright:\n                <a href='https://mlzealot.github.io'> mlzealot.github.io </a>\n                </p>\n            </MDBFooter>\n            </div>\n        )\n    }\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/avatar256x256.e004483f.png\";","\nexport const aboutMeComponentTitle = \"About Me\";\nexport const aboutMeComponentDescription= \"ML Zealot is a platform to express my Machine Learning \\\nand Data Science interests on the web.\";\n\nexport const myName = \"Srimanth Agastyaraju\";\nexport const myTitle = \"Full Stack Developer, Machine Learning Enthusiast\";\nexport const myBio = \"Hello, I am Srimanth, an undergraduate Machine Learning enthusiast.\\\n I am currently working in a Fortune 500 company as a Full Stack Engineer.\\\n Currently, my interests are Exploratory Data Analysis (EDA) and Natural Language Processing (NLP).\\\n I keep an eye out for the latest trends in technologies such as Data Science, Machine Learning and Application Development.\\\n I aspire to earn a Master's degree in Data Science from a reputed university.\";\n\n\nexport const aboutMeLinkArray = [\n    {\n        social_id : 0,\n        social_name : \"Email\",\n        social_url : \"mailto:srimanth.rockzz@gmail.com\",\n        social_icon : \"envelope\",\n        color_class: \"blue-text\",\n        is_fab: false\n    },\n    {\n        social_id : 1,\n        social_name : \"LinkedIn\",\n        social_url : \"https://in.linkedin.com/in/srimanthagastyaraju\",\n        social_icon : \"linkedin\",\n        color_class: \"blue-text\",\n        is_fab: true\n    },\n    {\n        social_id : 2,\n        social_name : \"Reddit\",\n        social_url : \"https://www.instagram.com/srimanth_agastyaraju/\",\n        social_icon : \"reddit\",\n        color_class: \"red-text\",\n        is_fab: true\n    },\n    {\n        social_id : 3,\n        social_name : \"Instagram\",\n        social_url : \"https://www.instagram.com/srimanth_agastyaraju/\",\n        social_icon : \"instagram\",\n        color_class: \"dark-grey-text\",\n        is_fab: true\n    },\n    \n];\n","import React, { Component } from \"react\";\nimport { MDBRow, MDBCol, MDBContainer, MDBCard, MDBCardBody, MDBIcon } from \"mdbreact\";\nimport avatar from \"../assets/avatar256x256.png\";\nimport { \n    aboutMeComponentTitle,\n    aboutMeComponentDescription,\n    myName, myTitle, myBio,\n    aboutMeLinkArray\n} from '../data/AboutMeData';\n\nclass AboutMe extends Component {\n  render() {\n    return (\n        <div>\n            {/* \n            my -> move in y-axis -> increase the number to make it go up in pixels\n            px -> shrink in x-axis -> increase the number to increase padding and decrease content width\n            pb -> Keep it at 4 I guess?\n            */}\n            <MDBCard className=\"my-0 px-5 pb-4\">\n                <MDBCardBody>\n                <h2 className=\"h1-responsive font-weight-bold my-4 text-center\">\n                    {aboutMeComponentTitle}\n                </h2>\n                <p className=\"w-responsive mx-auto mb-5 text-center\">\n                    {aboutMeComponentDescription}\n                </p>\n                <MDBRow>\n                    <MDBCol md=\"4\" className=\"mb-lg-0 mb-5 text-center\">\n                        <img src={avatar} className=\"img-fluid z-depth-1 rounded-circle\" alt=\"\" />\n                        <ul className=\"list-unstyled mb-0\" style={{paddingTop:\"2rem\"}}>\n                            {aboutMeLinkArray.map((social) => (\n                                <a href={social.social_url} className=\"p-2 fa-2x\" target=\"_blank\"\n                                    key={social.social_id}>\n                                    <MDBIcon fab={social.is_fab} icon={social.social_icon} className={social.color_class} />\n                                </a>\n                            ))}\n                        </ul>\n                    </MDBCol>\n                    <MDBCol md=\"8\" className=\"mb-lg-0 mb-5\">\n                        <h5 className=\"font-weight-bold mt-4 mb-3\">{myName}</h5>\n                        <p className=\"text-uppercase blue-text\">{myTitle}</p>\n                        <p style={{textAlign: \"justify\"}}>\n                            {myBio}\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n                </MDBCardBody>\n            </MDBCard>\n        </div>\n    );\n  }\n}\n\nexport default AboutMe;","\r\nimport React, { Component } from 'react';\r\nimport \"./index.css\";\r\nimport NavBar from './components/NavBar';\r\nimport Home from './components/Home';\r\nimport ProjectCards from './components/ProjectCards';\r\nimport Footer from './components/Footer';\r\nimport AboutMe from './components/AboutMe';\r\n\r\nclass AppDemo extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <NavBar />\r\n          <section id=\"home\"><Home/></section>\r\n          <section id=\"projects\"><ProjectCards/></section>\r\n          <section id=\"about_me\"><AboutMe/></section>\r\n          <Footer/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppDemo;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}